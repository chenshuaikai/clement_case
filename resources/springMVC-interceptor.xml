<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 注解扫描 base-package扫描哪个包 -->
	<context:component-scan base-package="com.web.controller"/>
	<!-- 解析注解 -->
	<context:annotation-config />
	<!-- 注解驱动 -->
	<mvc:annotation-driven/>
	<!-- 允许加载静态资源 -->
	<mvc:default-servlet-handler/>
		<!--  静态资源 css js img  属于静态资源 -->

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截器需要拦截的路径  MVC中
            /，所以访问的地址都由DispatcherServlet进行解析（但是经测试，jsp资源不会被这种方式拦截）
            /* 拦截所有的url  不包括.jsp
            /**拦截所有的URL和子路径 （包括静态资源）  spring mvc   重点：但是可以拦截html   html页面发出的请求会被dispatcher处理
                jsp如果不放在WEB-INF文件下，spring mvc是无法拦截的    这种请情况下需要用最原始的servlet的Filter接口,具体可以参照
                http://blog.csdn.net/lsx991947534/article/details/45499205
              注意：jsp放在WEB-INF下才能不被用户访问到  拦截jsp指的是不能  请求  .do  /   -->
			<mvc:mapping path="/**"/>

			<!-- 放行的路径 -->
			<mvc:exclude-mapping path="/js/**"/>  <!-- 放行js文件夹路径下所有路径 -->
			<!-- 配置拦截器的类 -->
			<bean class="com.web.interceptor.AvoidRepeatCommitInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

</beans>
